name: Build and upload to PyPI

on: [push, pull_request]


jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-12]

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.18.0
        env:
          CIBW_ARCHS_LINUX: auto aarch64 ppc64le s390x
          CIBW_ARCHS_MACOS: x86_64 universal2 arm64
          CIBW_TEST_COMMAND: python -c "import bitarray; assert bitarray.test().wasSuccessful()"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  build_webassembly:
    name: Build WebAssembly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          source ./emsdk_env.sh

      - name: Build WebAssembly
        run: |
          mkdir -p build
          emcmake cmake -S . -B build
          emmake make -C build

      - uses: actions/upload-artifact@v2
        with:
          path: ./build/*.wasm

  upload_pypi:
    needs: [build_wheels, build_sdist, build_webassembly]
    runs-on: ubuntu-latest
    environment: pypi
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          publish-dir: dist
